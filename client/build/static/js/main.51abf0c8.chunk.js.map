{"version":3,"sources":["chathandler.ts","components/login.tsx","components/chat.tsx","components/signup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChatHandlerSIO","EventEmitter","socket","_state","io","window","location","host","split","on","emit","data","state","user","users","push","filter","u","this","v","active","undefined","username","password","content","Error","withStyles","root","color","Typography","LoginForm","props","error","chathandler","setState","Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","Paper","elevation","padding","height","width","margin","onSubmit","e","preventDefault","requestLogin","TextField","label","value","onChange","target","fullWidth","required","type","FormControlLabel","control","Checkbox","name","Button","variant","React","Component","ChatMessage","sender","Chat","input","messages","appendMessage","bind","appendAnnouncement","message","map","i","item","sendMessage","setInput","id","endIcon","Send","Success","SignupForm","footer","requestSignup","App","authenticated","connected","reload","CircularProgress","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51abf0c8.chunk.js","sourcesContent":["import { EventEmitter } from \"events\";\r\nimport io, { Socket } from \"socket.io-client\";\r\n\r\ninterface IntroductionPacket {\r\n  username: string;\r\n  users: string[];\r\n  time: string;\r\n}\r\n\r\ninterface ChatState {\r\n  username: string;\r\n  users: string[];\r\n}\r\n\r\ninterface MessagePacket {\r\n  sender: string;\r\n  content: string;\r\n}\r\n\r\nexport default interface IChatHandler extends EventEmitter {\r\n  get state(): ChatState | undefined;\r\n  set state(v: ChatState | undefined);\r\n  get connected(): boolean;\r\n  get authenticated(): boolean;\r\n\r\n  requestLogin(username: string, password: string): void;\r\n  requestSignup(username: string, password: string): void;\r\n  sendMessage(content: string): void;\r\n}\r\n\r\nexport class ChatHandlerGo extends EventEmitter implements IChatHandler {\r\n  private socket: WebSocket;\r\n  private _state: ChatState | undefined;\r\n\r\n  public get state(): ChatState | undefined {\r\n    return this._state;\r\n  }\r\n\r\n  private set state(v: ChatState | undefined) {\r\n    this._state = v;\r\n  }\r\n\r\n  public get authenticated(): boolean {\r\n    return this.state !== undefined;\r\n  }\r\n\r\n  public get connected(): boolean {\r\n    return this.socket && this.socket.readyState == this.socket.OPEN;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.socket = new WebSocket(`ws://${window.location.host}/ws`);\r\n\r\n    const reload = () => this.emit(\"reload\");\r\n\r\n    this.socket.onopen = reload;\r\n    this.socket.onclose = reload;\r\n\r\n    this.socket.onmessage = (message) => {\r\n      const data = JSON.parse(message[\"data\"]);\r\n      console.log(`received ${JSON.stringify(data)}`);\r\n      if (data.type) this.emit(data.type, data.data);\r\n    };\r\n\r\n    this.on(\"welcome\", (data: IntroductionPacket) => {\r\n      this._state = data;\r\n      reload();\r\n    });\r\n\r\n    this.on(\"user-join\", (data: any) => {\r\n      const { user } = data;\r\n      this.emit(\"announcement\", `${user} has joined the chat!`);\r\n\r\n      this.state?.users.push(user);\r\n      this.emit(\"reload\");\r\n    });\r\n\r\n    this.on(\"user-leave\", (data: any) => {\r\n      const { user } = data;\r\n      this.emit(\"announcement\", `${user} has left the chat!`);\r\n\r\n      if (!this.state) return;\r\n\r\n      this.state.users = this.state?.users.filter((u) => u !== user);\r\n      this.emit(\"reload\");\r\n    });\r\n  }\r\n  requestSignup(username: string, password: string): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  send(type: string, data?: object) {\r\n    const packet = { type, data };\r\n    this.socket.send(JSON.stringify(packet));\r\n  }\r\n\r\n  requestLogin(username: string, password: string) {\r\n    this.send(\"login-request\", { username, password });\r\n  }\r\n\r\n  sendMessage(content: string) {\r\n    this.send(\"chat-message\", { content });\r\n  }\r\n}\r\n\r\nexport class ChatHandlerSIO extends EventEmitter implements IChatHandler {\r\n  private socket: Socket;\r\n  private _state: ChatState | undefined;\r\n\r\n  public get state(): ChatState | undefined {\r\n    return this._state;\r\n  }\r\n\r\n  private set state(v: ChatState | undefined) {\r\n    this._state = v;\r\n  }\r\n\r\n  public get connected(): boolean {\r\n    return this.socket && this.socket.active;\r\n  }\r\n\r\n  public get authenticated(): boolean {\r\n    return this.state !== undefined;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.socket = io(`http://${window.location.host.split(\":\")[0]}:3001`);\r\n\r\n    this.socket.on(\"connect\", () => this.emit(\"reload\"));\r\n    this.socket.on(\"disconnect\", () => this.emit(\"reload\"));\r\n\r\n    this.socket.on(\"welcome\", (data: IntroductionPacket) => {\r\n      this.state = data;\r\n      this.emit(\"reload\");\r\n    });\r\n\r\n    this.socket.on(\"incorrect-password\", () => this.emit(\"incorrect-password\"));\r\n\r\n    this.socket.on(\"chat-message\", (data: MessagePacket) => {\r\n      if (this.state) this.emit(\"chat-message\", data);\r\n    });\r\n\r\n    this.socket.on(\"user-join\", (user: string) => {\r\n      this.emit(\"announcement\", `${user} has joined the chat!`);\r\n\r\n      this.state?.users.push(user);\r\n      this.emit(\"reload\");\r\n    });\r\n\r\n    this.socket.on(\"user-leave\", (user: string) => {\r\n      this.emit(\"announcement\", `${user} has left the chat!`);\r\n\r\n      if (!this.state) return;\r\n\r\n      this.state.users = this.state?.users.filter((u) => u !== user);\r\n      this.emit(\"reload\");\r\n    });\r\n\r\n    this.socket.on(`signup-success`, (data) =>\r\n      this.emit(`signup-success`, data)\r\n    );\r\n    this.socket.on(`signup-fail`, (data) => this.emit(`signup-fail`, data));\r\n  }\r\n\r\n  requestLogin(username: string, password: string) {\r\n    this.socket.emit(\"login-request\", { username, password });\r\n  }\r\n\r\n  requestSignup(username: string, password: string) {\r\n    this.socket.emit(`signup-request`, { username, password });\r\n  }\r\n\r\n  sendMessage(content: string) {\r\n    this.socket.emit(\"chat-message\", content);\r\n  }\r\n}\r\n","import {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ChatHandler from \"../chathandler\";\r\n\r\nconst Error = withStyles({\r\n  root: {\r\n    color: \"#ff0000\",\r\n  },\r\n})(Typography);\r\n\r\ninterface LoginProps {\r\n  chathandler: ChatHandler;\r\n}\r\n\r\ninterface LoginState {\r\n  username: string;\r\n  password: string;\r\n  error: string;\r\n}\r\n\r\nexport default class LoginForm extends React.Component<LoginProps, LoginState> {\r\n  constructor(props: LoginProps) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n    };\r\n    this.props.chathandler.on(\"incorrect-password\", () => {\r\n      this.setState({\r\n        username: this.state.username,\r\n        password: \"\",\r\n        error: \"Your password is incorrect!\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const paperStyle = {\r\n      padding: 50,\r\n      height: 320,\r\n      width: 320,\r\n      margin: \"20px auto\",\r\n    };\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Paper elevation={10} style={paperStyle}>\r\n          <h2>LAET Chat - Sign In</h2>\r\n\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const { username, password } = this.state;\r\n              this.props.chathandler.requestLogin(username, password);\r\n            }}\r\n          >\r\n            <TextField\r\n              label=\"Username\"\r\n              value={this.state.username}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  username: e.target.value,\r\n                  password: this.state.password,\r\n                  error: \"\",\r\n                })\r\n              }\r\n              fullWidth\r\n              required\r\n            ></TextField>\r\n            <TextField\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  username: this.state.username,\r\n                  password: e.target.value,\r\n                  error: \"\",\r\n                })\r\n              }\r\n              fullWidth\r\n              required\r\n            ></TextField>\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"checkedB\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Sign In\r\n            </Button>{\" \"}\r\n            {this.state.error ? <Error>{this.state.error}</Error> : <></>}\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import { Button, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Send } from \"@material-ui/icons\";\r\nimport ChatHandler from \"../chathandler\";\r\n\r\ninterface Message {\r\n  sender: string;\r\n  content: string;\r\n}\r\n\r\nconst ChatMessage = (props: Message) => (\r\n  <Typography>\r\n    <b>{props.sender}</b>: {props.content}\r\n  </Typography>\r\n);\r\n\r\ninterface ChatState {\r\n  input: string;\r\n  messages: JSX.Element[];\r\n}\r\n\r\ninterface ChatProps {\r\n  chathandler: ChatHandler;\r\n}\r\n\r\nexport default class Chat extends React.Component<ChatProps, ChatState> {\r\n  constructor(props: ChatProps) {\r\n    super(props);\r\n\r\n    this.state = { input: \"\", messages: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.chathandler.on(\"chat-message\", this.appendMessage.bind(this));\r\n    this.props.chathandler.on(\"announcement\", this.appendAnnouncement.bind(this));\r\n  }\r\n\r\n  private appendMessage(message: Message) {\r\n    let { input, messages } = this.state;\r\n    const { sender, content } = message;\r\n    messages.push(<ChatMessage sender={sender} content={content} />);\r\n    this.setState({ input, messages });\r\n  }\r\n\r\n  private appendAnnouncement(content: string) {\r\n    let { input, messages } = this.state;\r\n    messages.push(<Typography><b>{content}</b></Typography>)\r\n    this.setState({ input, messages })\r\n  }\r\n\r\n  private setInput(input: string) {\r\n    this.setState({ input, messages: this.state.messages });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const buttonStyle = {\r\n      width: 80,\r\n      height: 50,\r\n    };\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        spacing={0}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {this.state.messages.map((e, i) => <Grid item key={i}> {e} </Grid>)}\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            const { input } = this.state;\r\n            this.props.chathandler.sendMessage(input);\r\n            this.setInput(\"\");\r\n          }}\r\n        >\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Message\"\r\n              value={this.state.input}\r\n              variant=\"outlined\"\r\n              onChange={(e) => this.setInput(e.target.value)}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              style={buttonStyle}\r\n              endIcon={<Send />}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChatHandler from \"../chathandler\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\ninterface LoginProps {\r\n  chathandler: ChatHandler;\r\n}\r\n\r\ninterface LoginState {\r\n  username: string;\r\n  password: string;\r\n  footer: JSX.Element;\r\n}\r\n\r\nconst Error = withStyles({\r\n  root: {\r\n    color: \"#ff0000\",\r\n  },\r\n})(Typography);\r\n\r\nconst Success = withStyles({\r\n  root: {\r\n    color: \"#00ff00\",\r\n  },\r\n})(Typography);\r\n\r\nexport default class SignupForm extends React.Component<\r\n  LoginProps,\r\n  LoginState\r\n> {\r\n  constructor(props: LoginProps) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      footer: <></>,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.chathandler.on(\"signup-fail\", () => {\r\n      this.setState({\r\n        username: this.state.username,\r\n        password: \"\",\r\n        footer: <Error>There is already a user with that name!</Error>,\r\n      });\r\n    });\r\n\r\n    this.props.chathandler.on(`signup-success`, (data) => {\r\n      const { username } = data;\r\n      this.setState({\r\n        username: \"\",\r\n        password: \"\",\r\n        footer: <Success>User {username} successfully created!</Success>,\r\n      });\r\n    });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const paperStyle = {\r\n      padding: 50,\r\n      height: 320,\r\n      width: 320,\r\n      margin: \"20px auto\",\r\n    };\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Paper elevation={10} style={paperStyle}>\r\n          <h2>LAET Chat - Sign Up</h2>\r\n\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const { username, password } = this.state;\r\n              this.props.chathandler.requestSignup(username, password);\r\n            }}\r\n          >\r\n            <TextField\r\n              label=\"Username\"\r\n              value={this.state.username}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  username: e.target.value,\r\n                  password: this.state.password,\r\n                  footer: <></>,\r\n                })\r\n              }\r\n              fullWidth\r\n              required\r\n            ></TextField>\r\n            <TextField\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  username: this.state.username,\r\n                  password: e.target.value,\r\n                  footer: <></>,\r\n                })\r\n              }\r\n              fullWidth\r\n              required\r\n            ></TextField>\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"checkedB\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Sign In\r\n            </Button>{\" \"}\r\n            {this.state.footer}\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import ChatHandler, { ChatHandlerSIO, ChatHandlerGo } from \"./chathandler\";\r\nimport LoginForm from \"./components/login\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Chat from \"./components/chat\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SignupForm from \"./components/signup\";\r\n\r\nexport const chathandler: ChatHandler = new ChatHandlerSIO();\r\n\r\ninterface AppState {\r\n  authenticated: boolean;\r\n  connected: boolean;\r\n}\r\n\r\nexport class App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = { authenticated: false, connected: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    chathandler.on(\"reload\", this.reload.bind(this));\r\n  }\r\n\r\n  reload() {\r\n    const { authenticated, connected } = chathandler;\r\n    this.setState({ authenticated, connected });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    if (!this.state.connected) {\r\n      return (\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          spacing={0}\r\n          direction=\"column\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <CircularProgress />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (!this.state.authenticated) {\r\n      return <LoginForm chathandler={chathandler} />;\r\n    }\r\n\r\n    return <Chat chathandler={chathandler} />;\r\n  }\r\n}\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={App} />\r\n    <Route\r\n      exact\r\n      path=\"/signup\"\r\n      component={() => <SignupForm chathandler={chathandler} />}\r\n    ></Route>\r\n  </Switch>\r\n);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}